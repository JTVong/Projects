{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","substr","length","ReactDOM","render","document","getElementById"],"mappings":"6QAsBeA,EAlBE,SAAC,GAAa,EAAZC,OAEf,MAAM,IAAIC,MAAM,cCQLC,MAZf,YAAoC,IAAhBC,EAAe,EAAfA,aAChB,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,oEACVC,KAAK,SACLC,YAAY,eACZC,SAAUJ,O,MCCXK,MARf,SAAgBC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,yBAA0BC,OAAQ,QAA3E,SACKJ,EAAMK,YCYJC,E,kDAdX,WAAYN,GAAQ,IAAD,8BACX,gBACKO,MAAQ,CACTC,UAAU,GAHH,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE9B,WAEI,OADqBG,KAAKJ,MAAlBC,SACU,2DAAqCG,KAAKX,MAAMK,a,GAZ/CQ,aC6CZC,E,kDAtCb,aAAe,IAAD,8BACZ,gBAWFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAX1C,EAAKZ,MAAQ,CACXhB,OAAQ,GACR0B,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBAK7C,WACE,MAAgCb,KAAKJ,MAA7BhB,EAAR,EAAQA,OAAQ0B,EAAhB,EAAgBA,YACVQ,EAAiBlC,EAAOmC,QAAO,SAACC,GACpC,OACEA,EAAMC,KAAKC,cAAcC,OAAO,EAAGb,EAAYc,UAC/Cd,EAAYY,iBAEd,OAAQtC,EAAOwC,OAEf,sBAAKpC,UAAU,KAAf,UACE,sBAAKA,UAAU,QAAf,UACE,gDACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,oBAEhC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,WARxB,oBAAI9B,UAAU,kBAAd,6B,GAxBYkB,aCFlBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.11913f22.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\n\n\nconst CardList = ({robots}) => {\n  if(true) {\n    throw new Error('Oh! NOOOO');\n  }\n  return (\n    <div>\n        {robots.map(({id, name, username, email}, index) => (\n            <Card\n                key = {index}\n                id = {id}\n                name = {name}\n                username = {username}\n                email = {email}\n            />\n        ))}\n    </div>\n  );\n}\nexport default CardList;\n","import React from 'react';\n\nfunction SearchBox({searchChange}) {\n    return (\n        <div className='pa1'>\n            <input \n                className='blue tc f3 ph4 pv1 b--transparent bg-lightest-blue br4 outline-0 '\n                type='search' \n                placeholder='SearchRobots'\n                onChange={searchChange}\n            /> \n        </div> \n    );\n}\nexport default SearchBox;\n","import React from 'react';\n\nfunction Scroll(props) {\n    return (\n        <div style={{overflow: 'scroll', border: '15px solid transparent', height: '80vh'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;\n","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n            super();\n            this.state = {\n                hasError: false\n            }\n        }\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    }\n    render(){\n        const { hasError } = this.state;\n        return hasError ? <h1>Oops! that's not good ;( </h1> : this.props.children;\n     }\n}\nexport default ErrorBoundry\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\n// import { robots } from '../robots';\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return (\n        robot.name.toLowerCase().substr(0, searchfield.length) ===\n        searchfield.toLowerCase());\n    });\n      return !robots.length ? \n      <h1 className='tc light-purple'>Loading ...</h1> :        \n      <div className=\"tc\">\n        <div className=\"vh-20\">\n          <h1>Robo - Friends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n        </div>\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"tachyons\";\nimport App from \"./containers/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}